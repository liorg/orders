@model Michal.Project.Models.OrderViewStatus
@{  
    ViewBag.Title = " אישור של משלוח מספר " + @Model.ShippingVm.Name;
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<h4>אישור /ביטול הזמנה  @Model.ShippingVm.Name</h4>
<div class="row">
    <div class="  col-md-12 well well-lg ">
        <div class="btn-group" style="margin-left: 4px">
            <button type="button" id="btnOk" data-toggle="tooltip" title="שמור וסיים משלוח" data-placement="top"
                class="btn btn-success btn-circle btn-xl">
                <img src="~/Content/img/ok32x32.png" />
            </button>
        </div>
        <div class="btn-group" style="margin-left: 4px">
            <button type="button" id="btnCancel" data-toggle="tooltip" title="ביטול" data-placement="top" data-url="@Url.Action("ShipView", "S", new { id = Model.ShippingVm.Id })"
                class="btn btn-danger btn-circle btn-xl">
                <img src="~/Content/img/delete32x32.png" />
            </button>
        </div>
        <div class="btn-group" style="margin-left: 4px">
            <button type="button" id="btnBack" data-toggle="tooltip" title="חזרה" data-placement="top" data-url="@Url.Action("ShipView", "S", new { id = Model.ShippingVm.Id })"
            class="btn btn-primary btn-circle btn-xl">
                <img src="~/Content/img/back32x32.png" />
            </button>
        </div>
    </div>
</div>

<div class="row">
    @using (Html.BeginForm("EndStatusDesc", "Status", FormMethod.Post, new { @class = "form-horizontal", role = "form", @id = "frm" }))
    {
        @Html.HiddenFor(m => m.Status.StatusId)
        @Html.HiddenFor(m => m.Status.ShipId)
        @Html.HiddenFor(m => m.Status.PicBase64)
        @Html.HiddenFor(m => m.Status.SigBackType)

        <div class="col-md-12">
            <div class="form-group">

                @Html.LabelFor(model => model.Status.IsTake, new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @*  <div class="switch1">*@
                    @* <input id="chkCheckin2" class="switchboot" data-switch-set="onColor" 
                        data-switch-value="success" data-off-color="danger" data-toggle="toggle"
                        data-off-text="לא התקבל" data-on-text="כן" data-off="לא" data-on="פעיל" type="checkbox">*@

                    @Html.CheckBoxFor(model => model.Status.IsTake, new { @class = "switchboot", data_switch_value = "success", data_off_color = "danger", data_on_text = "כן", data_off_text = "לא התקבל", data_switch_set = "onColor", data_toggle = "toggle", data_off = "לא פעיל", data_on = "פעיל" })
                    @*</div>*@
                </div>

            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Status.Recipient, new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.TextBoxFor(model => model.Status.Recipient, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Status.Recipient)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Status.TelRecipient, new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.TextBoxFor(model => model.Status.TelRecipient, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Status.TelRecipient)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Status.NameTarget, new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.TextBoxFor(model => model.Status.NameTarget, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Status.NameTarget)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Status.Desc, new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.TextBoxFor(model => model.Status.Desc, new { @class = "form-control" })

                </div>
            </div>
        </div>
    }
</div>
@if (Model.Status.SigBackType == 1)
{
    <div class="row">
        <div class="col-md-offset-2 col-md-10">
            <div class="row visible-md visible-lg ">
                <input type="button" class="btn btn-success btn-lg clearsig " value="נקה חתימה" />
            </div>
            <div class="row">
                <div class="col-md-6 col-xs-12 col-sm-12" style="padding: 2px;" id="signature-pad">
                    <canvas id="sign" style="border: dashed thin; padding: 2px;"></canvas>
                </div>
                <div class="visible-xs  visible-sm  col-md-6 col-xs-12 col-sm-12">
                    <button id="clearsig" class="clearsig" style="float: right" data-action="clear">נקה</button>
                </div>
            </div>
            @*  <button  data-action="save">Save</button>*@
        </div>
    </div>
}
@section Scripts {
    <script src="~/Scripts/signature_pad.min.js"></script>
    @Scripts.Render("~/bundles/jqueryval")
    @Styles.Render("~/Content/jqueryui")
    @Scripts.Render("~/bundles/jqueryui")

    <script>
        var wrapper = document.getElementById("signature-pad"),
            clearButton = document.getElementById("clearsig"),//wrapper.querySelector("[data-action=clear]"),
            saveButton = wrapper.querySelector("[data-action=save]"),
            canvas = document.getElementById("sign"),//wrapper.querySelector("canvas"),
            signaturePad;

        // Adjust canvas coordinate space taking into account pixel ratio,
        // to make it look crisp on mobile devices.
        // This also causes canvas to be cleared.
        function resizeCanvas() {
            // When zoomed out to less than 100%, for some very strange reason,
            // some browsers report devicePixelRatio as less than 1
            // and only part of the canvas is cleared then.
            var ratio = Math.max(window.devicePixelRatio || 1, 1);
            canvas.width = canvas.offsetWidth * ratio;
            canvas.height = canvas.offsetHeight * ratio;
            canvas.getContext("2d").scale(ratio, ratio);
        }

        //window.onresize = resizeCanvas;
        //resizeCanvas();

        signaturePad = new SignaturePad(canvas);

    </script>

    <script>
        $(document).ready(function () {
            $('[data-toggle="tooltip"]').tooltip();

            $("#btnOk").click(function (e) {
                debugger;
                var sigBackType = $("#Status_SigBackType").val();
                alert(sigBackType);



                if ($("#frm").valid()) {
                    if (sigBackType == "1") {
                        if (signaturePad.isEmpty()) {
                            alert("יש לחתום");
                            e.preventDefault();
                        } else {
                            //window.open(signaturePad.toDataURL());
                            var dataURL = canvas.toDataURL("image/png");
                            // $("#Status_PicBase64").val(dataURL);
                            var base64 = dataURL.replace(/^data:image\/(png|jpg);base64,/, "");
                            $("#Status_PicBase64").val(base64);
                        }
                    }
                    $("#frm").submit();
                }
                else {
                    alert("יש למלא שדות חובה");
                    return false;
                }
            });
            $('.clearsig').click(function () {
                $("#Status_PicBase64").val("");
                signaturePad.clear();
            });
            $('#btnBack').click(function () {
                var url = $(this).attr("data-url");
                changeUrl(url);
            });
            $('#btnCancel').click(function () {
                var url = $(this).attr("data-url");
                changeUrl(url);
            });

        });
    </script>
}